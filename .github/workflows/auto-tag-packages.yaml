name: Auto tag

on:
  push:
    branches:
      - main2
      - master2
    paths:
      - 'packages/**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v4
      with:
        go-version: '^1.20.0'
    - name: Check builds
      shell: bash
      run: |
        echo "$(go version)"
        cd packages/
        for folder in */; do
          cd "$folder"
          echo "Building $folder..."
          go build -v
          if [[ $? -eq 0 ]]; then
            echo "Built $folder."
          else
            echo "Building $folder failed."
            exit 1
          fi
          cd ..
        done
    - name: Find the version bump
      id: find_version_bump
      shell: bash
      run: |
        echo "$(go version)"
        COMMIT_MESSAGE='${{ github.event.head_commit.message }}'
        VERSION_BUMP="patch"
        if [[ $COMMIT_MESSAGE =~ ^(feat!).*$ ]]; then
          VERSION_BUMP="major"
        elif [[ $COMMIT_MESSAGE =~ ^(feat).*$ ]]; then
          VERSION_BUMP="minor"
        fi
        echo "Selected version bump: $VERSION_BUMP"
        echo "::set-output name=versionBump::$VERSION_BUMP"
    - name: Setup semver and make the version bump
      id: make_version_bump
      shell: bash
      run: |
        SEMVER_PATH=$(pwd)
        wget -O $SEMVER_PATH/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
        chmod +x $SEMVER_PATH/semver
        echo "$($SEMVER_PATH/semver --version)"
        cd packages/
        for folder in */; do
          folder=${folder%/}
          echo "Checking for $folder..."
          cd "$folder"
          PREFIX_MATCH="packages/$folder"
          echo "Prefix match: $PREFIX_MATCH"
          LAST_VERSION=$(git describe --abbrev=0 --tags --match="$PREFIX_MATCH/*" 2>&1 | grep -Po "(?<=$PREFIX_MATCH/)(.*)")
          echo "Last version: $LAST_VERSION"
          if [[ $LAST_VERSION == "" ]];
          then
            LAST_VERSION="v0.0.0"
          fi
          NEW_VERSION=$($SEMVER_PATH/semver bump ${{ steps.find_version_bump.outputs.versionBump }} $LAST_VERSION)
          echo "New version: $NEW_VERSION"
          NEW_TAG="$PREFIX_MATCH/v$NEW_VERSION"
          echo "Creating tag $NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "\n"
          cd ..
        done